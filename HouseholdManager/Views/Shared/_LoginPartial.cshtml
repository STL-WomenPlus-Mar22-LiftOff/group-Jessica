@using Microsoft.AspNetCore.Identity
@using System.Text;

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
    {
        //Arbitrary length cutoff to prevent odd navbar scaling
        const int lengthCutoff = 20;
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.Append(UserManager.GetUserName(User));
        // +3 to account for the "..." that would be added, prevents truncations like "defaultAdmin@yahoo.co..."
        if (stringBuilder.Length > lengthCutoff + 3)
        {
            stringBuilder.Remove(lengthCutoff - 1, (stringBuilder.Length - lengthCutoff + 1));
            stringBuilder.Append("...");
        }
        string userName = stringBuilder.ToString();

        <li class="nav-item">
        <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@userName</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
