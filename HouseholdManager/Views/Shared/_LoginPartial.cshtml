@using Microsoft.AspNetCore.Identity

@inject SignInManager<Member> SignInManager
@inject UserManager<Member> UserManager

@{
    var user = await UserManager.GetUserAsync(User) ?? new Member();
    string displayName = !string.IsNullOrEmpty(user.DisplayName) ? user.DisplayName
                                                                 : UserManager.GetUserName(User);
    string userIcon = user.Icon ?? "";
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="navbar-text nav-item nav-displayname">
        <text class="icon-font">@userIcon </text>@displayName
    </li>
    <li class="nav-item">
        <a id="editMemberProfile" class="nav-link" asp-action="Edit" asp-controller="Member" title="Profile">Profile</a>
    </li>
    <li class="nav-item">
        <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Account</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
